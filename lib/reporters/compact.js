// Generated by CoffeeScript 1.3.3
(function() {
  var _, _s;

  _s = require('underscore.string');

  _ = require('underscore');

  module.exports = function(n) {
    n.on('target info', function(info) {
      var alias;
      this.info = info;
      alias = [];
      if (this.info.hostname) {
        alias.push(this.info.hostname);
      }
      if (this.info.ip) {
        alias.push(this.info.ip);
      }
      return this.alias = alias.length === 0 ? '' : alias.join(':');
    });
    n.on('module result', function(result) {
      var alias, color, name, value, _ref;
      color = result.error ? 'red' : 'green';
      alias = this.alias;
      if (alias) {
        alias += ' - ';
      }
      console.log(("   " + alias + result.module + " - " + result.took + "ms")[color]);
      _ref = result.data;
      for (name in _ref) {
        value = _ref[name];
        if (_.isArray(value)) {
          value = value.join(', ');
        }
        console.log(" > " + (_s.capitalize(name)) + ": " + value);
      }
      return console.log();
    });
    n.on('target identify', function(data) {
      console.log(("" + this.alias + " has been identified as " + data.device).bold);
      return console.log();
    });
    return n.on('session progress', function(data) {
      var bar, length, percent, width;
      percent = Math.floor(data.progress);
      width = 20;
      length = Math.round(width * data.progress / 100);
      bar = '';
      bar += _s.repeat('=', length);
      bar += _s.repeat(' ', width - length);
      console.log("    progress [" + bar + "] " + percent + "% " + ((data.eta / 1000).toFixed(1)) + "s " + data.remainingScans + " scans left");
      return console.log();
    });
  };

}).call(this);
