// Generated by CoffeeScript 1.3.3
(function() {
  var fs, modules, _,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  fs = require('fs');

  _ = require('underscore');

  modules = exports.modules = {};

  exports.run = function(enabled) {
    var middleware, middlewareDir, module, moduleDir, modulesDir, name, _i, _len, _ref, _results;
    if (enabled == null) {
      enabled = ['all'];
    }
    if (_.isString(enabled)) {
      enabled = enabled.split(',');
    }
    modulesDir = "" + __dirname + "/../modules";
    _ref = fs.readdirSync(modulesDir);
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      module = _ref[_i];
      if (!(__indexOf.call(enabled, 'all') >= 0 || __indexOf.call(enabled, module) >= 0)) {
        continue;
      }
      moduleDir = "" + modulesDir + "/" + module;
      module = modules[module] = require(require.resolve("" + moduleDir + "/" + module));
      module.Module.prototype.middleware = middleware = {};
      middlewareDir = "" + moduleDir + "/middleware";
      if (!fs.existsSync(middlewareDir)) {
        continue;
      }
      _results.push((function() {
        var _j, _len1, _ref1, _results1;
        _ref1 = fs.readdirSync(middlewareDir);
        _results1 = [];
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          name = _ref1[_j];
          _results1.push(middleware[name] = require("" + middlewareDir + "/" + name));
        }
        return _results1;
      })());
    }
    return _results;
  };

  exports.list = function() {
    return Object.keys(exports.modules);
  };

  exports.amount = function() {
    return Object.keys(exports.modules).length;
  };

}).call(this);
