// Generated by CoffeeScript 1.3.3
(function() {
  var fs, modules, path, _,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  path = require('path');

  fs = require('fs');

  _ = require('underscore');

  modules = exports.modules = {};

  exports.run = function(enabled) {
    var device, file, identities, identitiesDir, line, middlewareDir, module, moduleDir, modulesDir, name, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;
    if (enabled == null) {
      enabled = ['all'];
    }
    if (_.isString(enabled)) {
      enabled = enabled.split(',');
    }
    modulesDir = "" + __dirname + "/../modules";
    _ref = fs.readdirSync(modulesDir);
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      module = _ref[_i];
      if (!(__indexOf.call(enabled, 'all') >= 0 || __indexOf.call(enabled, module) >= 0)) {
        continue;
      }
      moduleDir = "" + modulesDir + "/" + module;
      module = modules[module] = require(require.resolve("" + moduleDir + "/" + module));
      module.middleware = {};
      module.identities = {};
      identitiesDir = "" + moduleDir + "/identities";
      if (fs.existsSync(identitiesDir)) {
        _ref1 = fs.readdirSync(identitiesDir);
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          name = _ref1[_j];
          file = fs.readFileSync("" + identitiesDir + "/" + name, 'utf8');
          name = path.basename(name, path.extname(name));
          identities = module.identities[name] = {};
          _ref2 = file.split("\n");
          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
            line = _ref2[_k];
            line = line.split(' ');
            device = line.shift();
            line = line.join(' ');
            line = line.trim();
            if (!identities[device]) {
              identities[device] = [];
            }
            identities[device].push(line);
          }
        }
      }
      middlewareDir = "" + moduleDir + "/middleware";
      if (!fs.existsSync(middlewareDir)) {
        continue;
      }
      _results.push((function() {
        var _l, _len3, _ref3, _results1;
        _ref3 = fs.readdirSync(middlewareDir);
        _results1 = [];
        for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {
          name = _ref3[_l];
          _results1.push(module.middleware[name] = require("" + middlewareDir + "/" + name));
        }
        return _results1;
      })());
    }
    return _results;
  };

  exports.list = function() {
    return Object.keys(exports.modules);
  };

  exports.amount = function() {
    return Object.keys(exports.modules).length;
  };

}).call(this);
