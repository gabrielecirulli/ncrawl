// Generated by CoffeeScript 1.3.3
(function() {
  var byName, byPort, clean, file, filename, fs, info, line, match, protocols, _, _i, _len, _ref, _s;

  fs = require('fs');

  _s = require('underscore.string');

  _ = require('underscore');

  protocols = {
    tcp: {},
    udp: {},
    sctp: {},
    ddp: {}
  };

  byPort = _.clone(protocols);

  byName = _.clone(protocols);

  exports.getByName = function(name, type) {
    if (type == null) {
      type = 'tcp';
    }
    return byName[type][name];
  };

  exports.getByPort = function(port, type) {
    if (type == null) {
      type = 'tcp';
    }
    return byPort[type][port];
  };

  filename = (function() {
    switch (process.platform) {
      case 'win32':
        return 'C:\\WINDOWS\\system32\\drivers\\etc\\services';
      default:
        return '/etc/services';
    }
  })();

  file = fs.readFileSync(filename, 'utf8');

  if (!fs.existsSync(filename)) {
    return;
  }

  _ref = file.split("\n");
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    line = _ref[_i];
    line = line.replace(/(\s|)#(.*)/, '');
    clean = _s.clean(line);
    if (!clean) {
      continue;
    }
    match = clean.match(/^(\S+)\s(\d+)\/(tcp|udp|sctp|ddp)((\s\S+)+|)$/);
    if (!match) {
      continue;
    }
    info = {
      name: match[1],
      port: +match[2],
      type: match[3],
      aliases: match[4].trim().split(' ')
    };
    byPort[info.type][info.port] = info;
    byName[info.type][info.name] = info;
  }

}).call(this);
