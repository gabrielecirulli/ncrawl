// Generated by CoffeeScript 1.3.3
(function() {
  var commander, defaults, fs, path, _, _s;

  commander = require('commander');

  path = require('path');

  fs = require('fs');

  _s = require('underscore.string');

  _ = require('underscore');

  defaults = {
    operations: 512,
    timeout: 2000,
    reporter: 'compact',
    modules: 'all'
  };

  exports.defaults = function(options) {
    return _.defaults(options, defaults);
  };

  exports.cli = function() {
    var file, generators, generatorsDir, modules, modulesDir, name, obj, objs, _i, _j, _len, _len1, _ref, _ref1;
    commander.version('0.0.1');
    commander.option('-T, --targets [string]', 'List of targets (192.168.2.1-192.168.5.255)');
    commander.option('-m, --modules [string]', "Only run specified modules - comma delimetered [" + defaults.modules + "]");
    commander.option('-p, --ports [string]', 'Additional ports youd like scanned - comma delimetered');
    commander.option('-o, --operations [number]', "Amount of concurrent operations [" + defaults.operations + "]");
    commander.option('-t, --timeout [number]', "Module timeout in milliseconds [" + defaults.timeout + "]");
    commander.option('-r, --reporter [string]', "Reporter to use [" + defaults.reporter + "]");
    commander.option('-e, --errors', 'Show errored modules');
    commander.option('-h, --empty', 'Show empty targets');
    modules = {};
    modulesDir = "" + __dirname + "/../modules";
    _ref = fs.readdirSync(modulesDir);
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      file = _ref[_i];
      modules[file] = require("" + modulesDir + "/" + file + "/" + file);
    }
    generators = {};
    generatorsDir = "" + __dirname + "/../generators";
    _ref1 = fs.readdirSync(generatorsDir);
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      file = _ref1[_j];
      name = path.basename(file, path.extname(file));
      generators[name] = require("" + generatorsDir + "/" + file);
    }
    commander.on('--help', function() {
      var generator, module, section;
      section = function(header, lines) {
        var line, _k, _len2;
        console.log("  " + header + ":");
        console.log();
        for (_k = 0, _len2 = lines.length; _k < _len2; _k++) {
          line = lines[_k];
          console.log("    " + line);
        }
        return console.log();
      };
      section('Modules', (function() {
        var _results;
        _results = [];
        for (name in modules) {
          module = modules[name];
          _results.push("" + (_s.rpad(name, 27)) + " " + module.description);
        }
        return _results;
      })());
      section('Generators', (function() {
        var _results;
        _results = [];
        for (name in generators) {
          generator = generators[name];
          _results.push("" + (_s.rpad(name, 27)) + " " + generator.description);
        }
        return _results;
      })());
      return section('Examples', ['$ ncrawl -T localhost']);
    });
    objs = _.extend(_.clone(modules), generators);
    for (name in objs) {
      obj = objs[name];
      if (obj.commands) {
        obj.commands(commander, defaults);
      }
    }
    commander.parse(process.argv);
    if (!commander.targets) {
      return commander.help();
    }
    return commander;
  };

}).call(this);
